@use "../../../../variables" as variables;

.modal {
  position: fixed;
  z-index: 1;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  overflow: auto;
  background-color: rgba(0, 0, 0, 0.9);
}

.modal-content {
  margin: 1% auto; /* % from the top and centered */
  background-color: #000000;
  color: #ffffff;
  padding: 30px;
  border-radius: 20px;
  border: 2px dotted #797979;
  width: 80%;
  text-align: center;
}

a,
a:visited {
  color: #0285ff; /* need it here because card component overrides */
}

.modal-header {
  display: flex;
  justify-content: flex-end;
}

.modal-body {
  padding-top: 15px;
  padding-bottom: 15px;
  overflow-y: auto; // Allow vertical scrolling
  flex-grow: 1;
}

.modal-footer {
  padding-top: 10px;
  border-top: 1px solid #444; // Separator line for footer
  display: flex;
  justify-content: space-between;
  align-items: center;
  font-size: 0.9rem;
  color: #ccc;
}

// Styles specific to Image Modal
.image-modal-body {
  // Styles specific to the body when showing images
}

.image-container {
  position: relative; // For positioning arrows
  text-align: center; // Center image and indicators
  min-height: 100px; // Ensure space for loading indicator
}

.gallery-image {
  display: block;
  max-width: 100%;
  max-height: 65vh; // Limit image height within modal
  width: auto; // Add this to maintain aspect ratio
  height: auto; // Add this to maintain aspect ratio
  margin: 0 auto; // Center image horizontally
  border-radius: 4px;
}

.arrow-button {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  background-color: rgba(0, 0, 0, 0.5);
  color: white;
  border: none;
  padding: 10px 15px;
  cursor: pointer;
  border-radius: 50%;
  font-size: 1.2rem;
  z-index: 10; // Ensure arrows are clickable

  &:hover {
    background-color: rgba(0, 0, 0, 0.8);
  }

  &.left {
    left: 10px;
  }

  &.right {
    right: 10px;
  }
}

.image-position-indicators {
  text-align: center;
  margin-top: 10px;

  svg {
    cursor: pointer;
    margin: 0 2px;
  }

  .image-position-circle {
    fill: none;
    stroke: #aaa;
    stroke-width: 2;
    transition: fill 0.3s ease;

    &.current {
      fill: #fff; // Highlight current image indicator
      stroke: #fff;
    }
  }
}

.image-description {
  margin-top: 15px;
  text-align: center; // Changed back to center
  padding: 0 10px; // Add some padding
  color: #eee; // Lighter text for description
}

.image-modal-footer {
  // Specific styles for image modal footer if needed
  justify-content: center; // Changed from space-between to center
  a {
    color: variables.$link-color; // Ensure links are visible
    text-decoration: none;
    &:hover {
      text-decoration: underline;
    }
    // Add some margin if both date and link are present to prevent touching
    margin-left: 15px;
  }
}

// Styles specific to Generic Modal
.generic-modal-body {
  // Styles specific to the body when projecting content
  text-align: center; // Center align the projected content
}

.generic-modal-footer {
   justify-content: flex-end; // Example: align buttons to the right
   gap: 10px;
}

.close {
  color: rgb(224, 224, 224);
  font-size: 28px;
  font-weight: bold;
}

.close:hover,
.close:focus {
  color: rgb(244, 244, 244);
  text-decoration: none;
  cursor: pointer;
}

@media screen and (min-width: 0px) and (max-width: 767px) {
  .modal {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
  }

  .modal-content {
    height: unset;
    width: 80%;
    padding: 10px;
    margin: auto;
  }
  .gallery-image {
    // width: 100%;
    height: auto;
  }
  .image-description {
    font-size: 14px;
  }
}

@media screen and (max-width: 767px) {
  .modal-content {
    width: 95%;
    margin: 15% auto;
    padding: 15px;
    max-height: 85vh;
  }

  .modal-header h2 {
    font-size: 1.2rem;
  }

  .gallery-image {
     max-height: 60vh; // Adjust image height on smaller screens
     // width: auto; and height: auto; are inherited, no need to repeat unless overriding
  }

  .arrow-button {
    padding: 8px 12px;
    font-size: 1rem;
  }
}
